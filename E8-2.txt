全称量化は、NOT EXISTSだけでなく、ALL述語によっても書くことができます。
ALL述語は、二重否定を使わなくて良いためSQLが分かりやすくなるのが利点です。
では、「全称量化その２：集合VS述語　すごいのはどっちだ？」のクエリを、ALL述語で書き換えて見てください。

(Projects)
+------------+----------+--------+
| project_id | step_nbr | status |
+------------+----------+--------+
| AA100      |        0 | 完了   |
| AA100      |        1 | 待機   |
| AA100      |        2 | 待機   |
| B200       |        0 | 待機   |
| B200       |        1 | 待機   |
| CS300      |        0 | 完了   |
| CS300      |        1 | 完了   |
| CS300      |        2 | 待機   |
| CS300      |        3 | 待機   |
| DY400      |        0 | 完了   |
| DY400      |        1 | 完了   |
| DY400      |        2 | 完了   |
+------------+----------+--------+


(P.151)例：工程１まで'は'完了しているプロジェクトを検索する

	SELECT
		*
	FROM
		Projects P1
	WHERE
		NOT EXISTS (
			SELECT
				status
			FROM
				Projects p2
			WHERE
				P1.project_id = P2.project_id
			AND
				status <> CASE
							WHEN step_nbr <= 1
								THEN '完了'
								ELSE '待機'
							END
			);

	+------------+----------+--------+
	| project_id | step_nbr | status |
	+------------+----------+--------+
	| CS300      |        0 | 完了   |
	| CS300      |        1 | 完了   |
	| CS300      |        2 | 待機   |
	| CS300      |        3 | 待機   |
	+------------+----------+--------+




解答：

	SELECT                                                          -- 工程１までは完了しているプロジェクトを取り出すため以下クエリーを設定する
		*                                                           -- 全てのカラムを確認のため設定する
	FROM                                                            -- プロジェクトの情報を以下テーブルより取得する
		Projects P1                                                 -- プロジェクトテーブルより取得する
	WHERE                                                           -- 工程１まで完了しているデータを抜き出すために以下条件を指定する
		'true' = ALL (                                              -- 以下全ての条件で'true'と判断された各データを抜き出す
		SELECT                                                      -- 抜き出し条件でデータを取得するために以下判定を設定する
			CASE                                                    -- 抜き出すかどうか判定する条件を設定する
				WHEN step_nbr <= 1                                  -- 工程が1以下の時で
				AND  status = '完了'                                 -- かつステータスが完了している場合は
				THEN 'true'                                         -- 抜き出しを行う判定をする
				WHEN step_nbr > 1                                   -- 工程が1以上の時で
				AND  status = '待機'                                -- 待機状態の場合は
				THEN 'true'                                         -- 抜き出しを行う判定をする
			ELSE 'false' END                                        -- それ以外のデータは除外する
		FROM                                                        -- プロジェクトの進捗を確認するため以下テーブルから抽出を行う
			Projects Project2                                       -- プロジェクトテーブルから抽出を行う
		WHERE                                                       -- 上記条件を実際のテーブルに関連づけるために以下条件を設定する
			P1.project_id = Project2.project_id                     -- プロジェクトIDが一致するデータで関連づける
	);

	+------------+----------+--------+
	| project_id | step_nbr | status |
	+------------+----------+--------+
	| CS300      |        0 | 完了   |
	| CS300      |        1 | 完了   |
	| CS300      |        2 | 待機   |
	| CS300      |        3 | 待機   |
	+------------+----------+--------+
